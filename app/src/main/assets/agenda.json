{
  "speakers": [
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/tnurkiewicz.jpeg",
      "twitter": "https://twitter.com/tnurkiewicz",
      "occupation": "CTO at DevSkiller",
      "name": "Tomasz Nurkiewicz",
      "description": "Java Champion. Spędził połowę życia na programowaniu, przez ostatnią dekadę w okolicach Javy. Uwielbia back-end i wizualizację danych. Zainteresowany alternatywnymi językami na JVM. Rozczarowany jakością oprogramowania tworzonego w dzisiejszych czasach (także przez siebie!), nie znosi długich metod i ukrytych efektów ubocznych. Zainteresowany analizą danych i programowaniem reaktywnym. Wierzy, że komputery stworzono, żeby programiści mogli automatyzować nudne i powtarzalne zadania. Także własne. Związany z open-source, DZone’s Most Valuable Blogger, kiedyś bardzo aktywny na StackOverflow. Autor, podcaster, trener, prelegent, recenzent techniczny wielu książek, biegacz. Twierdzi, że kod pozbawiony testów jednostkowych to nie „feature” tylko plotka. Napisał książkę o RxJavie dla O’Reilly. CTO w DevSkiller.",
      "id": 1,
      "linkedin": "https://www.linkedin.com/in/tomasz-nurkiewicz-80513b92"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/images.png",
      "twitter": "https://twitter.com/technites_pl",
      "occupation": "Software Architect and Trainer",
      "name": "Marcin Markowski",
      "description": "Architekt, trener, zwolennik podejścia Software Craftsmanship i ścisłej współpracy z biznesem. Specjalizuje się w modelowaniu opartym o Domain Driven Design i projektowaniu architektury systemów. Zaczynał od consultingu biznesowego, później przeszedł do IT. Pracował zarówno nad systemami „enterprise”, jak i tworzył od podstaw rozwiązania dla małych firm. Próbował wejść w świat startupów z własnym produktem. Ostatecznie został jednak w IT, gdzie działa jako konsultant i trener.",
      "id": 2,
      "linkedin": ""
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/Zbyszko_kolor.jpg",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Search Engineer",
      "name": "Zbyszko Papierski",
      "description": "Inżynier, który zabawił w zawodzie jakieś 15 lat, spędzając ponad połowę tego, próbując zrozumieć o co w searchu chodzi (prace trwają). Aktualnie Search Engineer w Brainly, zajmujący się po godzinach pracą w kapitule Trójmiejskiego JUGa. Jest fanbojem DDD.",
      "id": 3,
      "linkedin": "https://www.linkedin.com/in/zbyszko/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/gil-300x300-1.jpeg",
      "twitter": "https://twitter.com/mariuszgil",
      "occupation": "Software Architect",
      "name": "Mariusz Gil",
      "description": "Software architect interesujący się złożonymi systemami o wysokiej wartości biznesowej, związany głównie z platformami webowymi. Ex-CTO, konsultant, speaker i trener w Bottega IT Minds. Z branżą IT związany od ponad 18 lat. Od kilku lat wykorzystuje EventStorming jako narzędzie do komunikacji pomiędzy zespołami developerskimi i biznesowymi, a także do modelowania oprogramowania w oparciu o DDD, CQRS czy EventSourcing. Uczestnik EventStorming Summit 2017, gdzie wspólnie z innymi zaproszonymi przez Alberto Brandoliniego osobami pracował nad rozwojem tej techniki. Po godzinach oddaje się swoim innym pasjom, fotografii i gitarze elektrycznej.",
      "id": 4,
      "linkedin": "https://www.linkedin.com/in/mariuszgil/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/images.png",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Team Coach",
      "name": "Katarzyna Leszczyńska-Bohdan",
      "description": "Certyfikowana coach, strateżka komunikacji i biznesu, psycholożka organizacji, HRBP. Pracuje z founderami i liderami, by działali skutecznie, niezależnie od zmiennych warunków biznesowych, skomplikowania projektu czy intensywnych emocji. Towarzyszy także zespołom w budowaniu efektywnej komunikacji i kultury organizacji. Przez kilkanaście lat zbierała doświadczenie m.in. przy tworzeniu i koordynacji pracy zespołów, zarządzaniu budżetami i zmianą, projektowaniu MVP startupów, budowie i implementacji strategii komunikacji biznesowej i programów rozwojowych. Jednak przede wszystkim pracowała z ludźmi, od 2015 skupia się na tych z branży IT. W ramach SoDA – Software Development Association Poland razem z Diversity Hub zrealizowała badanie “Zarządzanie różnorodnością w IT”. Wyróżniona w raporcie Strong Women in IT 2021 – Global Edition. Wykładowczyni ITBM na AGH w Krakowie, prelegentka na konferencjach biznesowych i technologicznych.",
      "id": 5,
      "linkedin": "https://www.linkedin.com/in/kalebo/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/images.png",
      "twitter": "twitter.com/marcin_milewicz",
      "occupation": "Frontend Tech Leader w PGS Software",
      "name": "Marcin Milewicz",
      "description": "Programista z pasji od ponad dwóch dekad, a profesjonalnie przeszło 10 lat. Principal Developer, Frontend Architect oraz Frontend Tech Leader w PGS Software. Po godzinach OSS kontrybutor, Toastmaster, miłośnik podróży, gór oraz psychologii silnych stron. Silnie nastawiony na innowacje technologiczne oraz rozwój osobisty. Od niedawna raczkujący podcaster.",
      "id": 6,
      "linkedin": "https://www.linkedin.com/in/marcinmilewicz"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/szydlo-300x300-1.jpg",
      "twitter": "https://twitter.com/lszydlo",
      "occupation": "Software Consultant/Architect/Trainer",
      "name": "Łukasz Szydło",
      "description": "Programista pasjonat, fan “Software Craftsmanship” i zwinnego podejścia do wytwarzania oprogramowania. Lubi proste rozwiązania skomplikowanych problemów. Na codzień zajmuje się tematami z zakresu architektury aplikacji biznesowych, Domain-Driven Design, Continuous Delivery, technologii Java oraz testowania automatycznego. Prywatnie mąż, ojciec piątki dzieci.",
      "id": 7,
      "linkedin": "https://www.linkedin.com/in/ukasz-szydo-14754024/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/kkedzierski.png",
      "twitter": "https://twitter.com/kkedzierski87",
      "occupation": "Software Developer",
      "name": "Krzysztof Kędzierski",
      "description": "Swoją przygodę z IT rozpoczynał od ról developerskich, stopniowo wchodząc w role liderskie/managerskie. Pracował w firmach o różnej specyfice jak software house, startup/scaleup, duża firma produktowa, bank inwestycyjny. Specjalizuje się w architekturze na przecięciu z zarządzaniem zespołami i organizacją. Prywatnie: wielki fan piłki nożnej.",
      "id": 8,
      "linkedin": "https://www.linkedin.com/in/krzysztofkedzierski/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/kgrzybek.jpg",
      "twitter": "https://twitter.com/kamgrzybek",
      "occupation": "Head of Software Engineering",
      "name": "Kamil Grzybek",
      "description": "Head of Software Engineering oraz Architekt – związany głównie z technologią .NET. Zwolennik podejścia Software Craftsmanship, automatyzacji, refactoringu, czystego kodu oraz pragmatycznego rozwiązywania problemów – zgodnie z ich klasą. Pasjonat tematów związanych z architekturą oprogramowania i projektowaniem systemów. Entuzjasta i praktyk Domain-Driven Design. Przemyślenia i wnioski opisuje na swoim blogu https://www.kamilgrzybek.com i Twitterze: @kamgrzybek. Związany z firmą ITSG Global, gdzie jako architekt, programista i konsultant odpowiedzialny jest za wytwarzanie oprogramowania dla firm z branży finansowej, medycznej i Big Data. Prywatnie – mąż, tata ukochanej córeczki, opiekun niesfornego psa, biegacz – amator i pasjonat samodoskonalenia żyjący zgodnie z Sokratesową dewizą – “wiem, że nic wiem”.",
      "id": 9,
      "linkedin": "https://www.linkedin.com/in/kamilgrzybek/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/MelchiorKozar.jpg",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Software Developer",
      "name": "Melchior Kozar",
      "description": "Melchior pracuje w branży IT już ponad 10 lat, w tym zdecydowaną wiekszość czasu w .NET. Od czasu gdy odkrył, że w Silverlight można pisać testy jednostkowe postanowił poszerzać swoją w wiedze w temacie pisania kodu dobrze pokrytego testami. Zawodowo zajmuje się głównie pisaniem aplikacji serwerowych, w branżach od finansowej po biomedczną.",
      "id": 10,
      "linkedin": ""
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/JedrzejJusza.jpg",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Software Developer",
      "name": "Jędrzej Jusza",
      "description": "Jędrzej aka JJ zajmuje się .NET zawodowo ponad 10 lat, pracując w międzyczasie z technologiami desktopowymi, mobilnymi, a kończąc na obecnych backendach i Azure. W EY poza programowaniem zajmuje się również programami stażowymi i opowiadaniem nieśmiesznych dowcipów na spotkaniach. W czasie wolnym kucharz (znacznie lepszy niż programista) i miłośnik historii XX wieku.",
      "id": 11,
      "linkedin": ""
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/Agata-Les.jpg",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Programistka, Project and People Manager",
      "name": "Agata Leś",
      "description": "Programistka z zawodu, Project and People Manager z wyboru. Pracowała w korporacjach jak i w małych firmach, a obecnie we własnym startupie. Porzuciła z impetem karierę programistyczną na rzecz prowadzenia projektów, własnych i cudzych. Certyfikowany Agile Leader, obecnie wprowadza na rynek produkt na skrzyżowaniu aplikacji sportowej i gry narracyjnej. Wieloletni trener z zakresu leadership i komunikacji. Największa fanka swojego zespołu.",
      "id": 12,
      "linkedin": "https://www.linkedin.com/in/agata-les"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/images.png",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Solution Architect",
      "name": "Kamil Klebaniuk",
      "description": "Solution Architect od 6 lat, wcześniej programista różnych języków. Pasjonat wysokowydajnej architektury rozproszonej, mający szczęście od wielu lat pracować przy rozwiązaniach wymagających dużej skali. Obecnie w Trans.eu Group S.A.",
      "id": 13,
      "linkedin": ""
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/Wojciech_Stepniak.png",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Senior Ruby on Rails Developer",
      "name": "Wojciech Stępniak",
      "description": "Inżynier oprogramowania z wykształcenia. Aktualnie pracuje jako Senior Ruby on Rails Developer dla Monterail.",
      "id": 14,
      "linkedin": "https://www.linkedin.com/in/wojciech-stpniak-ab4679154/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/KR.jpg",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Head of Engineering at SoftwareHut",
      "name": "Karol Rogowski",
      "description": "Working in IT since 2009. Currently working as Head of Engineering at SoftwareHut and as an academic teacher at Białystok Technical University. Co-founder of meet.js Białystok. Book and articles author. Father, husband, huge H.P. Lovecraft fan and terrible poker player.",
      "id": 15,
      "linkedin": "https://www.linkedin.com/in/karol-rogowski-86b51765"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/images.png",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "CTO at Accesto",
      "name": "Michał Kurzeja",
      "description": "Współzałożyciel i CTO Accesto.com, ale przede wszystkim programista pasjonat. Uwielbia poznawać nowe technologie i sprawdzać je w praktyce. Nieustannie walczy z kodem słabej jakości.",
      "id": 16,
      "linkedin": "https://www.linkedin.com/in/mkurzeja/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/tdubikowski.jpg",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "",
      "name": "Tomasz Dubikowski",
      "description": "Tomek is Director of Engineering and Head of Wroclaw Site at Sportradar, a Public Speaker and Trainer. He has over 10 years of professional experience working as a Software Engineer, Leader and Manager. As an engineer, he is passionate about craftsmanship, propagating clean code, automated tests, behaviour driven development and domain driven design. As a leader, he helps to build an organisational culture based upon autonomy, collaboration and trust so that developers are equipped with both the hard and soft skills necessary to build truly awesome products. Tomek loves to change the reality around him. He his highly pragmatic, challenges orthodoxy at all levels and believes that there is always room for improvement. He is always eager to discuss and share his ideas.",
      "id": 17,
      "linkedin": "https://www.linkedin.com/in/tomasz-dubikowski/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/kunysz_ola.jpg",
      "twitter": "https://twitter.com/OlaQnysz",
      "occupation": "Programistka i założycielka Szkoły Testów",
      "name": "Aleksandra Kunysz",
      "description": "Ola Kunysz tworzy oprogramowanie od kilkunastu lat. Ma doświadczenie w programowaniu full stack, testowaniu, zbieraniu wymagań i prowadzeniu szkoleń. Pracowała w korporacjach, startupach i pro bono w różnych branżach i krajach. Najbardziej lubi pisać kod, który ma znaczenie i rozwiązywać prawdziwe problemy. Od 2019 roku prowadzi Szkołę Testów i zwiększa świadomość w temacie jakości wśród programistów. Kiedy jest offline, jeździ na jednośladach, spaceruje z psem albo ćwiczy jogę.",
      "id": 18,
      "linkedin": "https://www.linkedin.com/in/akunysz"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/images.png",
      "twitter": "https://twitter.com/ArturSkowronski",
      "occupation": "Machine Learning Engineer",
      "name": "Artur Skowroński",
      "description": "W tym roku stuknęła mu dycha w branży. Tę dekadę spędził przy bardzo różnych projektach – takich, które startowały od zera, jak i grubo starszych od niego. Całe życie walczy o to, żeby nie musieć klepać CRUD’ów… nawet jeśli oznacza to dłubanie w systemach legacy. Po trzech latach fascynującej (bez ironii) przygody w ponad czterdziestoletniej architekturze, aktualnie pracuje w VirtusLab, prowadząc produkt Vived, platformę z kurowanymi treściami dla developerów.",
      "id": 19,
      "linkedin": ""
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/images.png",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Machine Learning Engineer",
      "name": "Paulina Żak",
      "description": "Od 6 lat pracuje w działce AI, ze specjalizacją w przetwarzaniu języka naturalnego. Jak każdy Machine Learning Engineer przybiera różne kapelusze w zależności od potrzeb, a to Data Scientista, Programisty, DevOpsa… a ostatnio nawet Team Leadera w zespole DS Vived.",
      "id": 20,
      "linkedin": ""
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/palka.jpeg",
      "twitter": "https://twitter.com/j_palka",
      "occupation": "Performance Engineer",
      "name": "Jarosław Pałka",
      "description": "Od ponad 20 lat w branży IT, jako administrator baz danych, programista, architekt, manager i „inżynier od spraw katastrof”. Brałem udział w małych, średnich i nonsensownie dużych projektach, prowadzonych zgodnie zasadami „waterfall”, Agile oraz przy braku jakichkolwiek metodyk, z tym samym zawsze skutkiem. Co doprowadziło mnie do wniosku, że nieważne co robisz tak długo, jak robisz to dobrze, w najprostszy z możliwych sposobów i używasz właściwych narzędzi, które wykonają pracę za ciebie. W międzyczasie dałem się porwać ideą TDD oraz Software Craftmanship, do granic możliwości wyeksploatować tak piękne w swej prostocie pomysły jak REST i NoSQL, by potem porzucić je, by zgłębić tajniki „system thinking” i zachwycić się siłą jaką niesie z sobą „metafora” i odkryć, że rządzą nami te same prawa „natury”. Niepokorny wyznawca kościoła JVM, badacz bytecode’u i JIT oraz wszelkiej maści parserów, interpreterów i kompilatorów. Na co dzień walczący o lepszą wydajność w Neo4j. Od czasu do czasu można usłyszeć moje niskiej jakości żarty na temat architektury na konferencjach w Polsce. W wolnych chwilach trener w http://symentis.pl i autor bloga na http://geekyprimitives.wordpress.com/ oraz samozwańczy dyktator w radach programowych konferencji CoreDump, SegFault, JDD oraz 4Developers.",
      "id": 21,
      "linkedin": "https://www.linkedin.com/in/jpalka/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/mbedkowski.png",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Software Development Manager w Tesco Technology",
      "name": "Marek Będkowski",
      "description": "Software Developer z ponad 15-letnim stażem. Obecnie pełni funkcję Software Development Manager w Tesco Technology.Marek ma za sobą wiele lat doświadczeń w dużych, komercyjnych projektach, takich jak: przetwarzanie połączeń w sieciach komórkowych, przetwarzanie ubezpieczeń społecznych w UE, nowoczesny IoT do monitorowania stanu na niestandardowym sprzęcie, live streaming pisany od podstaw (przy użyciu Java!) i budowanie smart urządzenia medycznego, sterowanego przez urządzenia mobilne za pomocą niestandardowego protokołu i łączącego się z mikroserwisami Rest w chmurze AWS + mock na raspberry PI używając nodebleno. Pracował również jako Scrum Master, Technical Lead i Solution Architect. Prywatnie Marek kocha góry, w które zabiera swoją rodzinę, morsuje i szlifuje formę na treningach kalisteniki.",
      "id": 22,
      "linkedin": "https://www.linkedin.com/in/marek-będkowski-4844bb177/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/images.png",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Software Developer",
      "name": "Piotr Suwała",
      "description": "Jestem programistą z wieloletnim doświadczeniem w systemach enterprise. Obcowanie z code debtem na codzień nauczyło mnie doceniać systemy, które są jasno uporządkowane i łatwe do zmiany. Doświadczenie uzupełniam wiedzą z książek, którą próbuje wdrażać komercyjnie, jak również w projektach open source. Ostatnio jestem w trakcie rocznej przerwy, podczas której prowadzę meetup Domain Driven Design w Gdańsku.",
      "id": 23,
      "linkedin": "https://www.linkedin.com/in/piotr-suwaa-928b1817a/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/Wojtek_square.jpg",
      "twitter": "https://twitter.com/wjptak",
      "occupation": "Head of Product Engineering at Revolut",
      "name": "Wojtek Ptak",
      "description": "Wojtek works as Head of Product Engineering at Revolut. Before, he worked as CTO for several companies, provided consulting, training, and assisted in building various data collecting, analytics, and applied ML/AI solutions, including Big Data implementations, data stream processing systems, and data insight projects. He worked with multiple Forbes 500 brands in the US, UK, and the Netherlands, including The Coca-Cola Company, the American Bankers Association, Macy’s, Bloomingdales, Heineken, Saks 5th Avenue, BP, Boots, Polo Ralph Lauren, Porsche, HSBC, and others.",
      "id": 24,
      "linkedin": "https://www.linkedin.com/in/wojtekptak/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/aprzybyl.jpg",
      "twitter": "https://twitter.com/anita_przybyl",
      "occupation": "Trener biznesu",
      "name": "Anita Przybył",
      "description": "Trenerka biznesu z z doświadczeniem na sali szkoleniowej od 2006 roku. Uczestniczka wielu szkoleń doskonalących metody pracy z ludźmi oraz wspierających ich rozwój, m.in. Szkoły Coachingu, Szkoły Trenerów Biznesu, Racjonalnej Terapii Zachowań, Terapii Skoncentrowanej na Rozwiązaniach. Przez kilka lat odpowiadała za szkolenia pracowników w międzynarodowej korporacji. Aktualnie trener freelancer. Specjalizuje się w szkoleniach z zakresu umiejętności społecznych w biznesie, m.in wspiera liderów w zakresie kompetencji miękkich. W swoich szkoleniach stawia na naukę przez doświadczenie, kładąc nacisk na interaktywne, warsztatowe formy nauczania oraz intensywny trening umiejętności. Od niedawna prowadząca podcast Liderem być.",
      "id": 25,
      "linkedin": "https://www.linkedin.com/in/anita-przybyl/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/radekmaziarka.jpg",
      "twitter": "https://twitter.com/RadekMaziarka",
      "occupation": "Solution Architect i Engineering Manager",
      "name": "Radosław Maziarka",
      "description": "Solution Architect i Engineering Manager w obszarze Azure. Pracuje przy pełnym zakresie tworzenia produktów cyfrowych – od analizy wymagań, przez architekturę i budowę systemu informatycznego, po jego utrzymanie na produkcji. Po pracy realizuje konsultacje i warsztaty dla firm oraz wspomaga technologicznie organizacje pozarządowe. Zwolennik pracy zwinnej i ciągłego samodoskonalenia. Można go złapać na blogu https://radekmaziarka.pl i Twitterze @RadekMaziarka",
      "id": 26,
      "linkedin": "https://www.linkedin.com/in/maziarka-radoslaw/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/dpokusa.jpeg",
      "twitter": "https://twitter.com/dpokusa",
      "occupation": "Architekt oprogramowania",
      "name": "Daniel Pokusa",
      "description": "Architekt oprogramowania, programista, a czasami nawet delivery manager z ponad 10 letnim doświadczeniem w branży IT ściśle związany z rodziną języków JVM. Na co dzień pragmatyk i zapalony zwolennik automatyzacji i efektywności. Równolegle trener i konsultant w zakresie systemów rozproszonych, jakości, organizacji zespołu i rekrutacji technicznej. Po godzinach tata i miłośnik kawy alternatywnej oraz nałogowy mówca konferencyjny na takich wydarzeniach jak 4Developers, BoilingFrogs, Confitura, Devoxx, SegFault, JDD, QualityExcites. Wierzy, że istotą wytwarzania dobrego oprogramowania jest komunikacja, współpraca i umiejętność dzielenia się wiedzą.",
      "id": 27,
      "linkedin": "https://www.linkedin.com/in/daniel-pokusa/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/images.png",
      "twitter": "https://twitter.com/lukaszchrusciel",
      "occupation": "Software Developer",
      "name": "Łukasz Chruściel",
      "description": "Zaangażowany od lat w rozwój Syliusa – Open Source’owego frameworka eCommerce. Aktualnie odpowiedzialny za decyzje architektoniczne oraz integrację Syliusa z API Platform. Lubi pracować z systemami komunikującymi się przez API. Pragmatyczny programista, uwielbiający czysty, jakościowy kod i testy automatyczne. Prywatnie podróżnik, fan gier planszowych i żeglarz.",
      "id": 28,
      "linkedin": "https://www.linkedin.com/in/lchrusciel/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/pstobiecki.jpeg",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Big Data Engineer w Ocado",
      "name": "Paweł Stobiecki",
      "description": "W świecie technologii od 10 lat, obecnie pracuje przy systemach big data w Ocado Technology. Inżynier, który myśli jak produktowiec; technologia i frameworki to dla niego tylko środek do osiągnięcia celu. Fan user testów, silnych więzi z użytkownikiem i produktów, do których nie trzeba instrukcji. Poza pracą pisze scenariusze na leśne urodziny dla firmy żony, śpiewa pieśni krasnoludzkie po konwentach, a także tworzy planszówki. Jest współautorem gry “Palec Boży”, nagradzanej w plebiscycie Planszowe Gram Prix oraz konkursie Planszowa Gra Roku.",
      "id": 29,
      "linkedin": "https://www.linkedin.com/in/pstobiecki/"
    },
    {
      "photoUrl": "https://2023.boilingfrogs.pl/wp-content/uploads/2023/01/images.png",
      "twitter": "https://www.facebook.com/konferencjaboilingfrogs/",
      "occupation": "Support Engineer w Ocado",
      "name": "Marcin Kulawinek",
      "description": "Na dzienno-nocnym supporcie od 15 lat. Od małych firm po korporacje. W wolnych chwilach programista Java. W zajętych – siła napędowa inicjatyw cross-* [zespołowych, departamentowych, streamowych]. Z zamiłowania wielbiciel IoT.",
      "id": 30,
      "linkedin": "https://www.linkedin.com/in/mkulawinek/"
    }
  ],
  "speeches": [
    {
      "path": 1,
      "speechSlotId": 2,
      "description": "TBD",
      "speakerId": 1,
      "id": 1,
      "title": "Better Call Fallback: Projektowanie usług odpornych na błędy"
    },
    {
      "path": 2,
      "speechSlotId": 2,
      "description": "\"Gdyby budowlańcy budowali domy w taki sam sposób, w jaki programiści piszą programy, to jeden dzięcioł zniszczyłby całą cywilizację\".\nTen dzięcioł to chociażby jedno zbłąkane zapytanie do bazy pozbawione limitu czasu.\nLub to malutkie API do wyświetlenia nic nieznaczącego znaczka w stopce strony.\nBez którego nie wyświetla się cała aplikacja.\nI też te niewinne pliki tymczasowe, które niepostrzeżenie odkładają się na dysku w setkach tysięcy sztuk?\nA co gdy dzięcioł uderzy przez przypadek dwa razy?\nCzy pobierzemy pieniądze z karty dwukrotnie?\nNie mówię tu o czarnych łabędziach.\nAle o dzięciołach, które nawet jeśli pojawią się raz na milion, to przy tysiącu transakcji na sekundę zobaczymy je średnio... co kwadrans.\nSpędzamy mnóstwo czasu implementując tzw. _happy path_.\nA czasem nawet ją testując.\nA tak niewiele czasu poświęcamy potencjalnym błędom i temu, jak zareaguje na nie aplikacja.\nChciałbym się z wami podzielić sprawdzonymi technikami, jak znajdować i zabezpieczać się przed niebezpiecznymi miejscami w kodzie.\nPokażę kilkanaście gotowych i sprawdzonych wzorców i porad, m.in.:\n\n* łapanie wyjątków i ponawianie\n* circuit breaker i bulk heading\n* idempotencja, deduplikacja i _outbox pattern_\n* dry-run, graceful degradation i sharding\n* i jak to wszystko przetestować\n\nŚwiat nie jest idealny i nasz kod nie jest idealny.\nPrzestańmy udawać, że jest inaczej.\nI budujmy systemy, które same potrafią się uleczyć, zamiast ciągle budzić nas w nocy alertami.",
      "speakerId": 2,
      "id": 2,
      "title": "Dokumentacja, która sama się pisze"
    },
    {
      "path": 3,
      "speechSlotId": 2,
      "description": "Wyszukiwanie w produkcie często postrzegane jest jak każda inna backendowa usługa, a sam silnik traktowany jako po prostu kolejne rozwiązanie NoSQL. Prawda jest inna. Dostarczenie funkcjonalności trafnej wyszukiwarki to złożone zadanie, którego wyzwania rozwiązuje się na wielu poziomach organizacji. Już na samym starcie problematyczna staje się analiza tekstu – nasze dane tekstowe nie są ustrukturyzowane, a różne języki musimy analizować w różny sposób (sporo języków nie posiada spacji, pozwalającej łatwo oddzielić od siebie słowa), do tego dochodzi całe morze synonimów i skrótów, a to wszystko – zanim na dobre zaczniemy się bawić z trafnością. Właśnie ta trafność to rdzeń naszego wyzwania. Co pokazać użytkownikowi, gdy wpisuje “wędkowanie”? Które ze słów w zapytaniu, jest ważniejsze od pozostałych? Jeśli mamy dwa dokumenty, które pasują równie dobrze, który jest istoniejszy dla użytkownika? O co właściwie chodziło w zapytaniu “etwajk”?? W trakcie prezentacji pokażę mały skrawek pracy search engineera. Przejdziemy szybką ścieżką od bezużytecznego zapytania SQL do czegoś, co zaczyna przynosić wartość użytkownikowi. Obraz ten będzie daleki od skończonego, ale praca przy trafności nigdy się nie kończy.",
      "speakerId": 3,
      "id": 3,
      "title": "Dodać wyszukiwarkę? Żaden problem, prawda?"
    },
    {
      "path": 1,
      "speechSlotId": 3,
      "description": "TBD",
      "speakerId": 4,
      "id": 4,
      "title": "Czego mama nie mówiła Ci o implementacji agregatów… A powinna"
    },
    {
      "path": 2,
      "speechSlotId": 3,
      "description": "Jeden z prostszych przepisów na “małą” katastrofę w projekcie IT: umieścić ludzi o odmiennych punktach widzenia, podejściu i priorytetach. Przyjrzymy się jak określić i reagować na każdym z 5 poziomów i obszarów konfliktu i samej dynamiki procesu grupowego. Sprawdzimy, kto jest odpowiedzialny za rozwiązanie problemu oraz gdzie czają się nasze słabości, co zrobić z oporem i jak wykorzystać dostępne zasoby. Podejście naukowe przeplatane przykładami z życia.",
      "speakerId": 5,
      "id": 5,
      "title": "Jaka piękna katastrofa, czyli co robić z konfliktem w zespole (ujęcie integracyjne)"
    },
    {
      "path": 3,
      "speechSlotId": 3,
      "description": "Kiedy wielu z nas dostaje w swoje ręce duży projekt frontendowy rozwijany przez kilkanaście osób latami często myśli jedno: przepisać. Czy to na pewno jedyna i najlepsza droga? Od dwóch lat pracuje w roli Frontend Tech Leadera wielkiej aplikacji frontendowej i z przyjemnością opowiem jak zwiększyłem kluczowe parametry funkcjonalne i wydajnościowe o około 80% bez przepisywania i wielkich refactorów gotowych funkcjonalności.",
      "speakerId": 6,
      "id": 6,
      "title": "Drugie życie aplikacji frontendowych,"
    },
    {
      "path": 1,
      "speechSlotId": 4,
      "speakerId": 7,
      "id": 7,
      "title": "Wybór bazy danych - to jednak nie takie proste"
    },
    {
      "path": 2,
      "speechSlotId": 4,
      "description": "Jest rok 2023. Liczba nowinek technologicznych, które mają przyspieszyć pracę inżynierów w IT jest nie do ogarnięcia. Mimo to pytanie, które w kuluarach zadaje sobie wiele (większość?) firm wytwarzających oprogramowanie brzmi “Co zrobić by software development był u nas szybszy?   W trakcie prezentacji spojrzę na ten problem, przyczyny i rozwiązania z różnych perspektyw. Niestety nie podzielę się magicznym zaklęciem, które nagle sprawi, że będzie dobrze. Pokażę za to kto stoi w centrum tego zagadnienia i jest w stanie pomóc 🙂",
      "speakerId": 8,
      "id": 8,
      "title": "Wolni jak ślimaki, pasywni jak rurkowce"
    },
    {
      "path": 3,
      "speechSlotId": 4,
      "description": "Testy automatyczne to kluczowy element architektury ewolucyjnej, której celem jest adaptacja do co raz to nowszych potrzeb biznesowych. Nie ma ewolucji bez zmiany, natomiast nie ma możliwości zmiany bez odpowiedniej i efektywnej strategii testowania. Wszyscy wiemy, że należy testować automatycznie. Wszyscy twierdzimy, że testujemy automatycznie. Pytanie jest, czy wszyscy wiemy, jak robić to najefektywniej? Na sesji będziemy eksplorować różne podejścia i heurystyki dotyczące testowania odpowiadając m. in. na pytania: – Co to znaczy dobry jakościowo test, jak możemy to ocenić? – Dlaczego czasami testy nam przeszkadzają, zamiast pomagać? – Jakie typy testów, na jakich poziomach i ile ich powinno być? – Mockować czy nie mockować? Chicago czy London? – Baza prawdziwa czy in-memory? – Jak wdrożyć shift-left testing w naszym projekcie? Temat testów automatycznych to temat mocno elektryzujący społeczność IT – i taki cel ma mieć również też ta prezentacja. Poziom średnio – zaawansowany  ",
      "speakerId": 9,
      "id": 9,
      "title": "Testy automatyczne w kontekście architektury ewolucyjnej – jak robić to dobrze"
    },
    {
      "path": 1,
      "speechSlotId": 5,
      "description": "Zrozumienie wymagań biznesowych jest kluczem do sukcesu, zarówno ze strony developerów, jak i szeroko pojętego biznesu. Testy behawioralne (BDD) to podejście, które zakłada testowanie automatyczne oprogramowania przy zastosowaniu biznesowego języka wymagań, zrozumiałego również dla osób nietechnicznych. A co, gdyby dałoby się je zastosować w kontekście testowania integracyjnego, stosowanego głównie przez developerów? Czy poprawiając komunikację i zrozumienie wymagań w zespole możemy jednocześnie podnieść jakość wytwarzanego oprogramowania? Naszą odpowiedzią na te pytania jest synergia dwóch podejść do testowania, które zaprezentujemy w trakcie naszej prelekcji. Połączenie tych dwóch podejść do automatycznego testowania oprogramowania może przynieść korzyści zarówno biznesowi, jak i developerom.  ",
      "speakerId": 10,
      "id": 10,
      "title": "Behawioralne testy integracyjne: praktyczne zastosowania"
    },
    {
      "path": 2,
      "speechSlotId": 5,
      "description": "Jak zostać liderem i nie wydawać fortuny na psychoterapeutę? Niektórzy twierdzą, że to niemożliwe. Ale ja podejmę rękawicę i pokażę ci trzy trudne, ale skuteczne, sposoby na to, jak odnaleźć się w nowej roli. Jeżeli właśnie zostałeś liderem zespołu, lub aspirujesz, aby nim być, a może dostałeś nieoczekiwany awans i właśnie zostajesz dowódcą drużyny, w której jeszcze niedawno byłeś skromnym programistą – wdrożenie tych wskazówek może znacznie ułatwić ci życie.",
      "speakerId": 12,
      "id": 11,
      "title": "First Time Leader, czyli 3 wskazówki jak działać po awansie z programisty na lidera"
    },
    {
      "path": 3,
      "speechSlotId": 5,
      "description": "Opowiem o tym jak w świecie mikrousług, z założenia dążącym w kierunku multi-tenantowym, odnajdują się aplikacje single-tenant i dlaczego przyszłość to jednak podejście hybrydowe.",
      "speakerId": 13,
      "id": 12,
      "title": "Architektury Hybrid-Tenancy"
    },
    {
      "path": 1,
      "speechSlotId": 6,
      "description": "1. Co mogę zrobić jako autor PullRequesta by proces CR przebiegł możliwie sprawnie i szybko? Dużo drobnych elementów takich jak: dostarczenie zwięzłego kontekstu o kodzie poddanym recenzji, linki do spisanych wymagań stojących za kodem, środowiska testowego, screenshoty/screencasty prezentujące proponowane zmiany, komentarze do potencjalnie niejasnych miejsc w kodzie, zostawianie pytań dla recenzentów…) 2. Jak systematycznie podchodzić do sprawdzania kodu innych osób a) organizacja czasu pracy, by uwzględnić potrzeby projektu w zakresie CR b) jak przechodzić przez większe partie kodu i gdzie zacząć analizować c) używanie checklisty projektu (jeśli projekt posiada), bądź opracowanie i konsekwentne stosowanie własnej checklisty 3. Jak formułować sugestie odnośnie kodu, by być dobrze odbieranym przez zespół. Dużo elementów takich jak: kultura wypowiedzi, dociekanie do esencji potrzeby stojącej za zmianą w kodzie, nie narzucanie rozwiązań autorowi a zwrócenie jego uwagi na dany przypadek brzegowy, itd. 4. Jakie dodatkowe narzędzia/techniki warto rozważyć w ramach procesu CR i kiedy. (np. kiedy warto rozważyć uruchomienie fragmentu kodu/aplikacji, kiedy warto zaproponować pair-programming, kiedy linkować do innych miejsc w kodzie w ramach tego samego projektu…)",
      "speakerId": 14,
      "id": 13,
      "title": "Praktyki i techniki usprawniające proces CodeReview"
    },
    {
      "path": 2,
      "speechSlotId": 6,
      "description": "Are you planning to interview for a new position? Have you ever taken an interview for that perfect job, only to be left wondering what held you back? Over the years of conducting my fair share of tech-job interviews, I have compiled my own set of insider conclusions about tech-interview mistakes. I’m not talking about mistakes in technical knowledge, but about other commonly overlooked job interview elements. This is not just a revealing presentation of the mistakes I have noticed. This is an invitation to discourse! Come to share interview experiences, burning hiring questions, and your own opinions.",
      "speakerId": 15,
      "id": 14,
      "title": "Don’t shoot yourself in the foot"
    },
    {
      "path": 3,
      "speechSlotId": 6,
      "description": "Kolejkowanie zadań jest w obecnych czasach standardowym i powszechnie używanym sposobem obsługę cięższych zadań. To z pozoru proste rozwiązanie potrafi się mocno skomplikować, gdy kolejkować musimy zadania w systemach “multi-tenant”. Nie chcemy przecież, aby jeden z naszych klientów miał możliwość “zagłodzenia” innych. Chciałbym podsumować najczęściej stosowane rozwiązania i zaprosić Was do dyskusji – czy da się lepiej rozwiązać ten problem?",
      "speakerId": 16,
      "id": 15,
      "title": "Sprawiedliwe podejście do kolejkowania w systemach multi-tenant"
    },
    {
      "path": 1,
      "speechSlotId": 7,
      "description": "W skalowaniu aplikacji trzeba brać pod uwagę wiele czynników poza samą architekturą i kodem. Podczas małej wycieczki w głąb oceanu zwanego Legacy, opierając się o przykłady z życia wzięte, przedyskutujemy różne dobre (ale tez te złe) pomysły jak skalować aplikacje.",
      "speakerId": 17,
      "id": 16,
      "title": "Scale the Whale, and do not Fail."
    },
    {
      "path": 2,
      "speechSlotId": 7,
      "description": "Wypalenie zawodowe dotyka coraz większej liczby pracowników w branży IT. Często pomimo świetnych zarobków, komfortowych warunków pracy, ergonomicznych krzeseł i owocowych wtorków wiele osób traci motywację do wykonywania swoich obowiązków. Zwłaszcza tych osób, których praca jest pasją. Nie musi tak być! Pasja może w Tobie płonąć i Cię nie spalać. Trzeba tylko ostrożnie obchodzić się z tym ogniem. Podczas tej prezentacji opowiem czego doświadczyłam na własnej skórze, jak rozpoznawać niepokojące symptomy wypalenia i co na to WHO.",
      "speakerId": 18,
      "id": 17,
      "title": "Nie wypalaj się! Jak żonglerka może uratować pracowników branży IT?"
    },
    {
      "path": 3,
      "speechSlotId": 7,
      "description": "Machine Learning – zwłaszcza wśród osób, które o AI czytają głównie z nagłówków prasowych – urosło do miana magicznej czarnej skrzynki. Takiej, która najpierw się długo tworzy, ale jak już “się zadzieje”, to rozwiąże wszystkie problemy. Prawda jest jednak dużo bardziej przyziemna – wdrożenie jakiegokolwiek uczenia maszynowego to krew, pot, łzy i iteracja… dużo iteracji. Oraz kluczenia – posuwania się do przodu, ale też regularnego wycofywania z nietrafionych pomysłów. W ramach wystąpienia przejdziemy krok po kroku przez całą, prawie trzyletnią podróż: od początkowego udawania, że jakikolwiek ML w aplikacji jest, poprzez pierwsze próby realnego wdrożenia, kończąc na konkretnych algorytmach rekomendacyjnych i NLP na produkcji… i to nie zawsze w miejscach gdzie się ich początkowo spodziewaliśmy. Oczywiście, po drodzę będzie kilka wywałek na twarz.",
      "speakerId": 19,
      "id": 18,
      "title": "Od \"Czarnoksiężnik z krainy Oz\" do modeli na produkcji – historia najprawdziwsza"
    },
    {
      "path": 1,
      "speechSlotId": 8,
      "description": "Jesteśmy grzeszni od momentu narodzenia, od momentu położenia pierwszej linijki kodu, nabazgrania pierwszego zarysu architektury na suchościeralnej tablicy. Grzeszymy przeciwko prawom fizyki i złożoności obliczeniowej. Ignorujemy starożytną wiedzę z zakresu teorii kolejek. W imię czego? Kolejnych funkcjonalności, których używa 1% naszych użytkowników, czy też błyskotek, które mają przyćmić naszą konkurencję ale tak naprawdę nikt się nie prosił o nie? Grzeszymy, gdyż czasy odpowiedzi naszych systemów wołają o pomstę do nieba a wydajność naszych systemów ma się nijak do możliwości jakie oferują współczesne procesory, sieci i dyski. Bezwstydnie zasłaniamy się słynną sentencją “premature optimization is root of all evil”, co interpretujemy,jako przyzwolenie, że nie ma co się przejmować wydajnością. To nie będzie opowieść o super wydajnych systemach, które łamią granice praw skalowalności. Będzie o czymś co nazywam, przyzwoitą wydajnością. Którą można osiągnąć niewielkim kosztem. Podczas prezentacji opowiem o antywzorcach wydajności w systemach, zarówno na poziomie kodu jak i architektury, których unikanie pozwoli większości z was przestać się martwić wydajnością. Porozmawiam o tym jaki kod lubią procesory, dlaczego należy się wystrzegać “memory wall”, dlaczego niektóre “dobre praktyki” OOP to zło, jakich wzorców unikać na poziomie architektury, oraz jak kluczowe znaczenie dla wydajności ma zastosowanie odpowiednich struktur danych, Na koniec opowiem dlaczego “przyzwoita wydajność” pozwoli wam uniknąć dużej ilości problemów na poziomie logiki biznesowej, szczególnie jeśli żyjecie w świecie systemów rozproszonych. Będzie meta-kod, by urazić wszystkich, aby nikt poczuł się wyróżniony. Będzie też kilka prawdziwych historii o optymalizacji wydajności, choć nazwy firm i systemów zostaną celowo zmienione.",
      "speakerId": 21,
      "id": 19,
      "title": "Anty wzorce wydajności, czyli jak niewydajny kod i architektura powoli zabijają planetę"
    },
    {
      "path": 2,
      "speechSlotId": 8,
      "description": "Przez lata pracy jako programista często zdarzało mi się pracować z kodem, który ktoś napruł bez ładu i składu – on działał ale nie bardzo było wiadomo dlaczego. Uroki legacy powiesz – pewnie tak, ale pare z nich udało mi się naprostować prostą zasadą: jak zastosuję najlepsze praktyki to zacznie samo działać. Po prostu będzie zrozumiały dla mnie i dla innych. Teraz jako SDM stosuję tę samą zasadę do zespołu – jak ja nie rozumiem, to oni tym bardziej a jak ja zrozumiem to muszę zrobić wszystko, żeby oni także, a ilość naprutego kodu spadnie. Podczas prezentacji przedstawię jak krok po kroku zastosowanie najlepszych praktyk agileowych zmieniło zbieraninę ludzi w zespół profesjonalistów z przewidywalnym delivery.",
      "speakerId": 22,
      "id": 20,
      "title": "Prucie kodu"
    },
    {
      "path": 3,
      "speechSlotId": 8,
      "description": "Mamy nieustający problem z code debtem, który odbiera nam radość z programowania oraz powoduje ciągły stres i frustracje. Z drugiej strony frameworki, podejścia architektoniczne, testy często powodują, że piszemy tylko więcej kodu, a nie otrzymujemy tego, co jest nam obiecane. Na tej prezentacji przedstawię wam w praktyczny sposób Clean Architecture i Hexagonal Architecture. Doświadczycie również jak te podejścia współpracują z Event Stormingiem, Spring Bootem i Kotlinem. Na przykładzie aplikacji open source labella pokażę wam: – jakie potencjalne problemy chciałem rozwiązać za pomocą tych technik – jakie prawdziwe problemy rozwiązały i wygenerowały te podejścia – podsumował, co według mnie naprawdę rozwiązują te praktyki Uchylając rąbka tajemnicy: Techniki te wypełniają obietnice, ale nie zawsze w sposób, w jaki byśmy od nich oczekiwali.",
      "speakerId": 23,
      "id": 21,
      "title": "Clean & Hexagonal Architecture – to naprawdę działa!"
    },
    {
      "path": 1,
      "speechSlotId": 9,
      "description": "Wyobraź sobie, że jesteś na interview na etapie system design do globalnej instytucji bankowej. Właśnie pada prośba o zaprojektowanie globalnego system dla banku, który ma działać od obydwóch Ameryk po Nową Zelandię. Istnieje szansa, że wyżyjesz się i rozwiążesz ten problem poprzez zastosowanie zaawansowanych technologii i rozwiązań chmurowych. Takie rozwiązania prowadzą do wielu problemów, w tym uzależnienia od wielu dostawców technologii. W tej prezentacji przedstawimy idące w kontrze bardzo nieskomplikowane i przyjazne dla skalowania całej firmy podejście, korzystając z zaskakująco prostej architektury oraz użytych wzorców. Już nigdy więcej nie spojrzycie na systemy tej skali w ten sam sposób. Poruszymy takie tematy jak: – Jak używać Domain-Driven Design do określenia granic systemu i zwiększenia jego elastyczności. – Jakie proste, ale skuteczne technologie i narzędzia można zastosować do budowy skalowalnego systemu bankowego – pokażemy od kuchni niezwykłą prostotę architektury Revolut, – Jakie wyzwania należy rozwiązać, aby system mógł działać na skalę globalną. – Jakie najważniejsze kroki należy podjąć, aby zapewnić bezpieczeństwo i niezawodność systemu. – Jak uniezależnić się od dostawców rozwiązań, aby zapewnić pełne bezpieczeństwo globalnego skalowania firmy.",
      "speakerId": 24,
      "id": 22,
      "title": "Hypergrowth scaling made simple"
    },
    {
      "path": 2,
      "speechSlotId": 9,
      "description": "Ponad 70% pracowników IT zauważa u siebie objawy wypalenia zawodowego, a co dziesiąty cierpi na depresję i doświadcza stanów lękowych. Tak przedstawia się kondycja psychiczna branży IT w Polsce. Przyjrzyjmy się temu. Wypalenie, lęki, depresja, czy dotyczą też Ciebie? Jak się objawiają? Po czym to poznać u kogoś i jak reagować? Co jest przyczyną i jak sprawa wygląda na poziomie mózgu? To nie będzie prezentacja o tym, żeby dobrze się odżywiać i uprawiać sport.",
      "speakerId": 25,
      "id": 23,
      "title": "Nie daj się zwariować, czyli co robić gdy psychika szwankuje"
    },
    {
      "path": 3,
      "speechSlotId": 9,
      "description": "W pewnym momencie podejmujesz decyzję, aby podzielić wasz system na kilka mikroserwisów. Albo wdrażasz zewnętrzny SaaS. Wtedy proces biznesowy zaczyna wychodzić poza system. Ale, przynajmniej na papierze, nie wiele się dzieje. Wywołujesz zewnętrzne API, jakbyś wywoływał(a) kod w twoim systemie. Testy jednostkowe przechodzą. A więc na proda! I w tym momencie dochodzą do głosu jeźdźcy apokalipsy – 8 błędnych założeń programowania rozproszonego. Nagle wiadomości przestają dochodzić, dochodzą dwa razy, lub w różnej kolejności. A wtedy twój system wariuje – procesy biznesowe urywają się w połowie, klienci nie kończą zamówień, a kasa znika w odmętach logów. Wpadnij posłuchać jak zaprojektować transakcje rozproszone, aby uniknąć tych problemów. I ostatecznie pokochać transakcje rozproszone.",
      "speakerId": 26,
      "id": 24,
      "title": "Jak przestałem się martwić i pokochałem transakcje rozproszone"
    },
    {
      "path": 1,
      "speechSlotId": 10,
      "description": "“You shouldn’t like things because people tell you you’re supposed to.” Jonathan Byers – Stranger Things, The Weirdo on Maple Street Rozważmy kilka sformułowań: 1. Mam coś do powiedzenia! Mam trochę fajnej wiedzy, którą chciałbym się podzielić. Ale nie jestem mówcą, nie wiem jak się do tego zabrać, jak zacząć, dlatego moje wystąpienie na pewno nie będzie dobre. 2. Jestem zbyt zdenerwowany. Stress mnie wykończy zamin wejdę na scenę. 3. Szczerze mówiąc, to nie jestem zainteresowany. Dlaczego w ogóle powinienem to rozważać? 4. Potrzebuję jakiegoś tygodnia żeby przygotować się na demo z klientem. Skąd miałbym wziąć czas na przygotowanie całego wystąpienia, to zajęłoby całą wieczność! 5. Chciałbym kiedyś wystąpić, ale jak tak myślę to nie mam nic o czym móbłym mówić.. Same banały. Czy z któreś z tych stwierdzeń odnosi się także do Ciebie? A może kilka? Porozmawiajmy o nich i rozważmy jak można na nie odpowiedzieć w zależności od kontekstu. Wierzę, że każdy w naszej branży powinien wiedzieć i posiadać choć trochę umiejętności związanych z wystąpieniami publicznymi. Używamy tej wiedzy podczas spotkań demo, różnych spotkań z zespołem, warsztatami z klientami i przy wielu innych okazjach. Co ważne- celem tej prezentacji nie będzie przekonanie Cię do zostania prelegentem! Mój cel jest raczej prosty: chcę dać Ci trochę swojego know-how oraz podzielić się doświadczeniem i przemyśleniami o wczesnej fazie przygotowań różnych prezentacji zderzając się z popularnymi problamami zawartymi w powyższych stwierdzeniach. Wszystko to na podstawie ponad 50 publicznych wystąpień, które miałem okazję dowieźć na różnych konferencjach w ostatnich latach i w połączeniu z rozważaniami na temat obaw, które dotyczą każdego z nas i które blokują nas przed podjęciem kolejnego kroku na ścieżce wystąpień publicznych. Dlaczego? Żebyś sam mógł zdecydować czy i jaki powinien być Twój kolejny krok 🙂",
      "speakerId": 27,
      "id": 25,
      "title": "Speakers Things: Running up that hill"
    },
    {
      "path": 2,
      "speechSlotId": 10,
      "description": "– Sylius rozpoczął integrację z API Platform na początku 2020. Od tego czasu pracowaliśmy ciężko projektując oraz dostarczając nasze nowe API. Integracja ta zapewniła nam sporo doświadczeń, którymi chciałbym się podzielić w ramach mojej prezentacji. Z mojej prezentacji dowiesz się: – Dlaczego zaprojektowaliśmy nasz system tak, a nie inaczej – Jakimi heurystykami kierowaliśmy się podejmując decyzje oraz jakie były konsekwencje naszych wyborów – Jak projektować bardziej skomplikowane procesy przez API",
      "speakerId": 28,
      "id": 26,
      "title": "Rozterki i decyzje. Czego się nauczyliśmy projektując API Syliusa"
    },
    {
      "path": 3,
      "speechSlotId": 10,
      "description": "Błędy i incydenty zdarzają się i będą się zdarzać. Są częścią naszego developerskiego życia. Bywają bolesne dla tych, którzy ich doświadczają… ale niosą za sobą mocne historie. Mogą się z nich uczyć nie tylko ich autorzy, ale i inni – tak, żeby nie powtarzać w kółko tych samych błędów. Podczas prezentacji podzielę się dwoma sposobami, jak uczymy się na błędach w Ocado Technology. Po każdym większym incydencie robimy post-mortemy, które pozwalają nam systemowo zapobiegać podobnym incydentom w przyszłości. Z kolei F’up Nights – Ocadowa adaptacja popularnej serii meetupów – pomaga nam oswajać się z błędami, dzielić się szerzej historiami naszych pomyłek i budować w organizacji bezpieczną przestrzeń, w której można to robić. Oprócz pokazania Wam, jak te dwie metody działają, podzielę się kilkoma wskazówkami, jak wprowadzić te praktyki do Waszych firm. W ten sposób będziecie mogli zacząć budować kulturę no-blame, gdzie błędy są akceptowane jako część rzeczywistości i stają się paliwem innowacji.",
      "speakerId": 29,
      "id": 27,
      "title": "Fakap paliwem rozwoju"
    }
  ],
  "speechSlots": [
    {
      "id": 1,
      "timeLabel": "9:10 - 9:30"
    },
    {
      "id": 2,
      "timeLabel": "9:50 - 10:35"
    },
    {
      "id": 3,
      "timeLabel": "10:55 - 11:40"
    },
    {
      "id": 4,
      "timeLabel": "12:00 - 12:45"
    },
    {
      "id": 5,
      "timeLabel": "12:50 - 13:05"
    },
    {
      "id": 6,
      "timeLabel": "14:00 - 14:15"
    },
    {
      "id": 7,
      "timeLabel": "14:20 - 15:05"
    },
    {
      "id": 8,
      "timeLabel": "15:25 - 16:10"
    },
    {
      "id": 9,
      "timeLabel": "16:30 - 17:15"
    },
    {
      "id": 10,
      "timeLabel": "17:35 - 18:20"
    }
  ]
}
